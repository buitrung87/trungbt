L·ªói n√†y x·∫£y ra v√¨ container certbot kh√¥ng th·ªÉ k·∫øt n·ªëi ra internet ƒë·ªÉ g·ªçi API c·ªßa Let's Encrypt. C√≥ th·ªÉ do v·∫•n ƒë·ªÅ DNS ho·∫∑c network configuration.
üîç Nguy√™n nh√¢n:

Container kh√¥ng c√≥ DNS resolution
Network isolation - container kh√¥ng th·ªÉ ra ngo√†i internet
Firewall blocking outbound connections
DNS server kh√¥ng ho·∫°t ƒë·ªông

‚úÖ Gi·∫£i ph√°p:
Gi·∫£i ph√°p 1: S·ª≠a command certbot - Th√™m DNS resolver
Trong file nginx-deploy.yml, s·ª≠a command certbot:
bash# T√åM (kho·∫£ng d√≤ng 220):
sudo docker run --rm --network="hocthongminh-network" \
  -v "${DEPLOY_DIR}/data/certbot/conf:/etc/letsencrypt" \
  -v "${DEPLOY_DIR}/data/certbot/www:/var/www/certbot" \
  certbot/certbot certonly --webroot -w /var/www/certbot \
  --email ${EMAIL} -d ${DOMAIN} -d www.${DOMAIN} -d monitor.${DOMAIN} \
  --rsa-key-size 4096 --agree-tos --non-interactive ${RENEW_FLAG}

# S·ª¨A TH√ÄNH (th√™m --dns ƒë·ªÉ s·ª≠ d·ª•ng Google DNS v√† Cloudflare DNS):
sudo docker run --rm --network="hocthongminh-network" \
  --dns 8.8.8.8 --dns 8.8.4.4 --dns 1.1.1.1 \
  -v "${DEPLOY_DIR}/data/certbot/conf:/etc/letsencrypt" \
  -v "${DEPLOY_DIR}/data/certbot/www:/var/www/certbot" \
  certbot/certbot certonly --webroot -w /var/www/certbot \
  --email ${EMAIL} -d ${DOMAIN} -d www.${DOMAIN} -d monitor.${DOMAIN} \
  --rsa-key-size 4096 --agree-tos --non-interactive ${RENEW_FLAG}
Gi·∫£i ph√°p 2: S·ª≠ d·ª•ng host network (Khuy·∫øn ngh·ªã)
Thay v√¨ d√πng custom network, d√πng host network ƒë·ªÉ tr√°nh v·∫•n ƒë·ªÅ DNS:
bash# S·ª¨A TH√ÄNH:
sudo docker run --rm --network="host" \
  -v "${DEPLOY_DIR}/data/certbot/conf:/etc/letsencrypt" \
  -v "${DEPLOY_DIR}/data/certbot/www:/var/www/certbot" \
  certbot/certbot certonly --webroot -w /var/www/certbot \
  --email ${EMAIL} -d ${DOMAIN} -d www.${DOMAIN} -d monitor.${DOMAIN} \
  --rsa-key-size 4096 --agree-tos --non-interactive ${RENEW_FLAG}
Gi·∫£i ph√°p 3: C·∫•u h√¨nh Docker daemon DNS
SSH v√†o server v√† c·∫•u h√¨nh Docker DNS:
bash# T·∫°o ho·∫∑c s·ª≠a file daemon.json
sudo nano /etc/docker/daemon.json
Th√™m n·ªôi dung:
json{
  "dns": ["8.8.8.8", "8.8.4.4", "1.1.1.1"]
}
Restart Docker daemon:
bashsudo systemctl restart docker

# Restart nginx container
cd /opt/hocthongminh/docker-compose/nginx
sudo docker-compose restart
Gi·∫£i ph√°p 4: Ki·ªÉm tra v√† s·ª≠a network configuration
Ki·ªÉm tra network hi·ªán t·∫°i:
bash# Ki·ªÉm tra network
docker network inspect hocthongminh-network

# Xem DNS settings
docker network inspect hocthongminh-network | grep -A 5 "IPAM"
N·∫øu network kh√¥ng c√≥ DNS, x√≥a v√† t·∫°o l·∫°i:
bash# Stop t·∫•t c·∫£ containers trong network
cd /opt/hocthongminh/docker-compose/nginx
sudo docker-compose down

cd /opt/hocthongminh/docker-compose/minio
sudo docker-compose down

# X√≥a network
sudo docker network rm hocthongminh-network

# T·∫°o l·∫°i v·ªõi DNS
sudo docker network create hocthongminh-network \
  --driver bridge \
  --opt "com.docker.network.bridge.name"="hocthongminh0" \
  --opt "com.docker.network.driver.mtu"="1500"

# Start l·∫°i services
cd /opt/hocthongminh/docker-compose/nginx
sudo docker-compose up -d
Gi·∫£i ph√°p 5: Test DNS resolution trong container
Ki·ªÉm tra xem container c√≥ th·ªÉ resolve DNS kh√¥ng:
bash# Test DNS t·ª´ m·ªôt container t·∫°m
sudo docker run --rm --network="hocthongminh-network" alpine nslookup acme-v02.api.letsencrypt.org

# N·∫øu l·ªói, test v·ªõi DNS explicit
sudo docker run --rm --network="hocthongminh-network" --dns 8.8.8.8 alpine nslookup acme-v02.api.letsencrypt.org

# Test curl
sudo docker run --rm --network="hocthongminh-network" --dns 8.8.8.8 curlimages/curl:latest curl -I https://acme-v02.api.letsencrypt.org/directory
Gi·∫£i ph√°p 6: S·ª≠a trong docker-compose.yml
Th√™m DNS v√†o docker-compose nginx:
yaml# File: docker-compose/nginx/docker-compose.yml
services:
  nginx:
    # ... c√°c config kh√°c
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    networks:
      - hocthongminh-network

  certbot:
    image: certbot/certbot
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    volumes:
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    networks:
      - hocthongminh-network
Gi·∫£i ph√°p 7: Ki·ªÉm tra firewall
Ki·ªÉm tra xem server c√≥ block outbound connections kh√¥ng:
bash# Ki·ªÉm tra firewall
sudo iptables -L -n | grep -i drop
sudo ufw status

# Test k·∫øt n·ªëi t·ª´ server
curl -I https://acme-v02.api.letsencrypt.org/directory

# N·∫øu b·ªã ch·∫∑n, m·ªü port 443 outbound
sudo ufw allow out 443/tcp
Gi·∫£i ph√°p 8: S·ª≠a file nginx-deploy.yml - Version ho√†n ch·ªânh
ƒê√¢y l√† phi√™n b·∫£n s·ª≠a ƒë·ªïi ho√†n ch·ªânh cho ph·∫ßn certbot:
bashecho ">>> B∆∞·ªõc 6: L·∫•y ho·∫∑c gia h·∫°n ch·ª©ng ch·ªâ SSL"
# Ch·ªâ production m·ªõi c·∫ßn SSL certificate
if [[ "${ENVIRONMENT}" == "production" ]]; then
  RENEW_FLAG=''
  if [ "${FORCE_RENEW}" == 'true' ]; then
    RENEW_FLAG='--force-renewal'
  fi

  # Ki·ªÉm tra xem ch·ª©ng ch·ªâ ƒë√£ t·ªìn t·∫°i ch∆∞a
  if [ "${FORCE_RENEW}" != 'true' ] && [ -f "${DEPLOY_DIR}/data/certbot/conf/live/${DOMAIN}/fullchain.pem" ]; then
    echo "‚ÑπÔ∏è Ch·ª©ng ch·ªâ SSL ƒë√£ t·ªìn t·∫°i. B·ªè qua vi·ªác t·∫°o m·ªõi."
  else
    echo "üîí ƒêang l·∫•y ch·ª©ng ch·ªâ SSL t·ª´ Let's Encrypt..."
    
    # Test DNS resolution tr∆∞·ªõc
    echo "üîç Testing DNS resolution..."
    if ! nslookup acme-v02.api.letsencrypt.org > /dev/null 2>&1; then
      echo "‚ö†Ô∏è DNS resolution failed on host, but will try with Docker DNS"
    fi
    
    # D·ª´ng nginx ƒë·ªÉ release port 80 (n·∫øu ƒëang ch·∫°y)
    sudo docker-compose stop nginx 2>/dev/null || true
    
    # Ch·∫°y Certbot v·ªõi multiple DNS servers v√† host network
    echo "üöÄ Running certbot with DNS servers..."
    sudo docker run --rm \
      --network="host" \
      --dns 8.8.8.8 \
      --dns 8.8.4.4 \
      --dns 1.1.1.1 \
      -v "${DEPLOY_DIR}/data/certbot/conf:/etc/letsencrypt" \
      -v "${DEPLOY_DIR}/data/certbot/www:/var/www/certbot" \
      certbot/certbot certonly --standalone \
      --preferred-challenges http \
      --http-01-port 80 \
      --email ${EMAIL} \
      -d ${DOMAIN} \
      -d www.${DOMAIN} \
      -d monitor.${DOMAIN} \
      --rsa-key-size 4096 \
      --agree-tos \
      --non-interactive \
      --verbose \
      ${RENEW_FLAG} || {
        echo "‚ùå Certbot failed. Trying with standalone method..."
        # Fallback: Try with standalone if webroot fails
        sudo docker run --rm \
          --network="host" \
          --dns 8.8.8.8 \
          -v "${DEPLOY_DIR}/data/certbot/conf:/etc/letsencrypt" \
          certbot/certbot certonly --standalone \
          --email ${EMAIL} \
          -d ${DOMAIN} \
          -d www.${DOMAIN} \
          -d monitor.${DOMAIN} \
          --agree-tos \
          --non-interactive \
          ${RENEW_FLAG}
      }
    
    # Verify certificate
    if [ -f "${DEPLOY_DIR}/data/certbot/conf/live/${DOMAIN}/fullchain.pem" ]; then
      echo "‚úÖ Certificate obtained successfully"
      openssl x509 -in "${DEPLOY_DIR}/data/certbot/conf/live/${DOMAIN}/fullchain.pem" -text -noout | grep "DNS:"
    else
      echo "‚ùå Certificate file not found!"
      exit 1
    fi
    
    # Start nginx l·∫°i
    sudo docker-compose up -d nginx
  fi
else
  echo "‚ÑπÔ∏è Staging environment - skipping SSL certificate generation"
fi
üîß Thay ƒë·ªïi ch√≠nh:

--network="host": S·ª≠ d·ª•ng host network thay v√¨ custom network
--dns 8.8.8.8 --dns 8.8.4.4 --dns 1.1.1.1: Th√™m multiple DNS servers
--standalone: S·ª≠ d·ª•ng standalone mode thay v√¨ webroot (d·ªÖ h∆°n)
--http-01-port 80: Explicit port cho HTTP challenge
Fallback mechanism: N·∫øu l·ªói, th·ª≠ l·∫°i v·ªõi method kh√°c
Stop nginx tr∆∞·ªõc: Tr√°nh conflict port 80

üöÄ Deploy l·∫°i:
Sau khi s·ª≠a code:

Commit v√† push code
Run workflow v·ªõi force_renew: true

Ho·∫∑c test th·ªß c√¥ng tr√™n server:
bash# SSH v√†o server
cd /opt/hocthongminh/docker-compose/nginx

# Stop nginx
sudo docker-compose stop nginx

# Test certbot v·ªõi DNS
sudo docker run --rm \
  --network="host" \
  --dns 8.8.8.8 \
  --dns 1.1.1.1 \
  -v "/opt/hocthongminh/data/certbot/conf:/etc/letsencrypt" \
  certbot/certbot certonly --standalone \
  --email hocthongminh.ai@gmail.com \
  -d hocthongminh.ai \
  -d www.hocthongminh.ai \
  -d monitor.hocthongminh.ai \
  --agree-tos \
  --non-interactive \
  --force-renewal \
  --verbose

# Start nginx l·∫°i
sudo docker-compose up -d nginx
Gi·∫£i ph√°p --network="host" + --dns 8.8.8.8 th∆∞·ªùng fix ƒë∆∞·ª£c 99% tr∆∞·ªùng h·ª£p l·ªói DNS v·ªõi certbot! üéØ
